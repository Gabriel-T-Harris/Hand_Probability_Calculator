[Lexeme TYPE: DECK_START, LEXEME: deck list:, line number: 1]
[Lexeme TYPE: SENTINEL_START, LEXEME: {, line number: 2]
[Lexeme TYPE: ID, LEXEME: First, line number: 3][Lexeme TYPE: SEMI_COLON, LEXEME: ;, line number: 3]
[Lexeme TYPE: ID, LEXEME: Second, line number: 4][Lexeme TYPE: SEMI_COLON, LEXEME: ;, line number: 4]
[Lexeme TYPE: ID, LEXEME: Third, line number: 5][Lexeme TYPE: SEMI_COLON, LEXEME: ;, line number: 5]
[Lexeme TYPE: ID, LEXEME: Forth, line number: 6][Lexeme TYPE: SEMI_COLON, LEXEME: ;, line number: 6]
[Lexeme TYPE: ID, LEXEME: Fifth, line number: 7][Lexeme TYPE: SEMI_COLON, LEXEME: ;, line number: 7]
[Lexeme TYPE: ID, LEXEME: 6th, line number: 8][Lexeme TYPE: SEMI_COLON, LEXEME: ;, line number: 8]
[Lexeme TYPE: ID, LEXEME: 7th, line number: 9][Lexeme TYPE: SEMI_COLON, LEXEME: ;, line number: 9]
[Lexeme TYPE: ID, LEXEME: Ash Blossom & Joyous Spring, line number: 10][Lexeme TYPE: SEMI_COLON, LEXEME: ;, line number: 10]
[Lexeme TYPE: ID, LEXEME: First, line number: 11][Lexeme TYPE: SEMI_COLON, LEXEME: ;, line number: 11]
[Lexeme TYPE: SENTINEL_END, LEXEME: }, line number: 12]

[Lexeme TYPE: LINE_COMMENT, LEXEME: //Some other variations exist for errors, but am not specifically noting them in error files., line number: 14]
[Lexeme TYPE: PROBABILITY_START, LEXEME: scenarios:, line number: 15]
[Lexeme TYPE: SENTINEL_START, LEXEME: {, line number: 16]
 [Lexeme TYPE: ID, LEXEME: Duplicate, line number: 17][Lexeme TYPE: ASSIGN, LEXEME: =, line number: 17] [Lexeme TYPE: SENTINEL_START, LEXEME: {, line number: 17][Lexeme TYPE: TREE_START, LEXEME: scenario, line number: 17] [Lexeme TYPE: ASSIGN, LEXEME: =, line number: 17] [Lexeme TYPE: SENTINEL_START, LEXEME: {, line number: 17][Lexeme TYPE: CONDITION_CARD_START, LEXEME: [, line number: 17][Lexeme TYPE: ID, LEXEME: 7th, line number: 17][Lexeme TYPE: CONDITION_CARD_END, LEXEME: ], line number: 17][Lexeme TYPE: SENTINEL_END, LEXEME: }, line number: 17][Lexeme TYPE: SEMI_COLON, LEXEME: ;, line number: 17][Lexeme TYPE: SENTINEL_END, LEXEME: }, line number: 17]
 
 [Lexeme TYPE: ID, LEXEME: Duplicate, line number: 19][Lexeme TYPE: ASSIGN, LEXEME: =, line number: 19] [Lexeme TYPE: SENTINEL_START, LEXEME: {, line number: 19][Lexeme TYPE: TREE_START, LEXEME: scenario, line number: 19] [Lexeme TYPE: ASSIGN, LEXEME: =, line number: 19] [Lexeme TYPE: SENTINEL_START, LEXEME: {, line number: 19][Lexeme TYPE: CONDITION_CARD_START, LEXEME: [, line number: 19][Lexeme TYPE: ID, LEXEME: 6th, line number: 19][Lexeme TYPE: CONDITION_CARD_END, LEXEME: ], line number: 19][Lexeme TYPE: SENTINEL_END, LEXEME: }, line number: 19][Lexeme TYPE: SEMI_COLON, LEXEME: ;, line number: 19][Lexeme TYPE: SENTINEL_END, LEXEME: }, line number: 19] [Lexeme TYPE: LINE_COMMENT, LEXEME: //repeated name error, line number: 19]
 
 [Lexeme TYPE: LINE_COMMENT, LEXEME: //Other variations of missing stuff with binary operators is not specifically tested for but is invalid., line number: 21]
 [Lexeme TYPE: ID, LEXEME: Binary Operand Missing, line number: 22][Lexeme TYPE: ASSIGN, LEXEME: =, line number: 22] [Lexeme TYPE: SENTINEL_START, LEXEME: {, line number: 22][Lexeme TYPE: TREE_START, LEXEME: scenario, line number: 22] [Lexeme TYPE: ASSIGN, LEXEME: =, line number: 22] [Lexeme TYPE: SENTINEL_START, LEXEME: {, line number: 22][Lexeme TYPE: CONDITION_CARD_START, LEXEME: [, line number: 22][Lexeme TYPE: ID, LEXEME: A, line number: 22][Lexeme TYPE: CONDITION_CARD_END, LEXEME: ], line number: 22] [Lexeme TYPE: XOR, LEXEME: XOR, line number: 22][Lexeme TYPE: SENTINEL_END, LEXEME: }, line number: 22][Lexeme TYPE: SEMI_COLON, LEXEME: ;, line number: 22][Lexeme TYPE: SENTINEL_END, LEXEME: }, line number: 22] [Lexeme TYPE: LINE_COMMENT, LEXEME: //missing operand error, line number: 22]
 
 [Lexeme TYPE: ID, LEXEME: Undefined reference, line number: 24][Lexeme TYPE: ASSIGN, LEXEME: =, line number: 24] [Lexeme TYPE: SENTINEL_START, LEXEME: {, line number: 24][Lexeme TYPE: TREE_START, LEXEME: scenario, line number: 24] [Lexeme TYPE: ASSIGN, LEXEME: =, line number: 24] [Lexeme TYPE: SENTINEL_START, LEXEME: {, line number: 24][Lexeme TYPE: CONDITION_SCENARIO_START, LEXEME: <, line number: 24][Lexeme TYPE: ID, LEXEME: Does Not Exist, line number: 24][Lexeme TYPE: CONDITION_SCENARIO_END, LEXEME: >, line number: 24][Lexeme TYPE: SENTINEL_END, LEXEME: }, line number: 24][Lexeme TYPE: SEMI_COLON, LEXEME: ;, line number: 24][Lexeme TYPE: SENTINEL_END, LEXEME: }, line number: 24][Lexeme TYPE: LINE_COMMENT, LEXEME: //undefined referenced scenario, line number: 24]
 
 [Lexeme TYPE: ID, LEXEME: Empty Scenario Error, line number: 26][Lexeme TYPE: ASSIGN, LEXEME: =, line number: 26] [Lexeme TYPE: SENTINEL_START, LEXEME: {, line number: 26][Lexeme TYPE: TREE_START, LEXEME: scenario, line number: 26] [Lexeme TYPE: ASSIGN, LEXEME: =, line number: 26] [Lexeme TYPE: SENTINEL_START, LEXEME: {, line number: 26][Lexeme TYPE: SENTINEL_END, LEXEME: }, line number: 26][Lexeme TYPE: SEMI_COLON, LEXEME: ;, line number: 26][Lexeme TYPE: SENTINEL_END, LEXEME: }, line number: 26] [Lexeme TYPE: LINE_COMMENT, LEXEME: //empty scenario error, line number: 26]
 
 [Lexeme TYPE: ID, LEXEME: Display Error 1, line number: 28][Lexeme TYPE: ASSIGN, LEXEME: =, line number: 28] [Lexeme TYPE: SENTINEL_START, LEXEME: {, line number: 28][Lexeme TYPE: TREE_START, LEXEME: scenario, line number: 28] [Lexeme TYPE: ASSIGN, LEXEME: =, line number: 28] [Lexeme TYPE: SENTINEL_START, LEXEME: {, line number: 28][Lexeme TYPE: CONDITION_CARD_START, LEXEME: [, line number: 28][Lexeme TYPE: ID, LEXEME: Forth, line number: 28][Lexeme TYPE: CONDITION_CARD_END, LEXEME: ], line number: 28][Lexeme TYPE: SENTINEL_END, LEXEME: }, line number: 28][Lexeme TYPE: SEMI_COLON, LEXEME: ;, line number: 28] [Lexeme TYPE: DISPLAY_START, LEXEME: display, line number: 28] [Lexeme TYPE: ASSIGN, LEXEME: =, line number: 28][Lexeme TYPE: SENTINEL_END, LEXEME: }, line number: 28][Lexeme TYPE: LINE_COMMENT, LEXEME: //invalid display value, line number: 28]
 
 [Lexeme TYPE: ID, LEXEME: Display Error 2, line number: 30][Lexeme TYPE: ASSIGN, LEXEME: =, line number: 30] [Lexeme TYPE: SENTINEL_START, LEXEME: {, line number: 30][Lexeme TYPE: TREE_START, LEXEME: scenario, line number: 30] [Lexeme TYPE: ASSIGN, LEXEME: =, line number: 30] [Lexeme TYPE: SENTINEL_START, LEXEME: {, line number: 30][Lexeme TYPE: CONDITION_SCENARIO_START, LEXEME: <, line number: 30][Lexeme TYPE: ID, LEXEME: Duplicate, line number: 30][Lexeme TYPE: CONDITION_SCENARIO_END, LEXEME: >, line number: 30][Lexeme TYPE: SENTINEL_END, LEXEME: }, line number: 30][Lexeme TYPE: SEMI_COLON, LEXEME: ;, line number: 30] [Lexeme TYPE: DISPLAY_START, LEXEME: display, line number: 30] [Lexeme TYPE: ASSIGN, LEXEME: =, line number: 30] [Lexeme TYPE: ID, LEXEME: invalid_value, line number: 30][Lexeme TYPE: SENTINEL_END, LEXEME: }, line number: 30][Lexeme TYPE: LINE_COMMENT, LEXEME: //invalid display value, line number: 30]
[Lexeme TYPE: SENTINEL_END, LEXEME: }, line number: 31]

[Lexeme TYPE: BLOCK_COMMENT, LEXEME: /*
Other:
Line Comment, yes
Block Comment, yes
Block Comment error, no

Deck List properties:
Duplicate Card, yes
Invalid Card, no
No Deck Error, no

Scenario List Properties:
No Scenario Defined Error, no
Invalid Name, no
Repeated Name Error, yes
Binary Operator, yes
Binary Operand Missing, yes
Reference Scenario, yes
Undefined Referenced Scenario Error, yes
Empty scenario, yes
Has Display, yes
Invalid Display, yes
Unary Operator, no
Multiple Unary, no
Nesting of Expressions, no
*/, line number: 33]

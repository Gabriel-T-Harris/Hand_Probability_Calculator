[Lexeme type: LINE_COMMENT, lexeme: //--simulation_results_console --input "testing/Test Input/Prolematic_Combinatorial_Test_Input_File.txt", line number: 1]
[Lexeme type: DECK_START, lexeme: decklist:, line number: 2]
[Lexeme type: SENTINEL_START, lexeme: {, line number: 3]
[Lexeme type: ID, lexeme: thingy, line number: 4][Lexeme type: SEMI_COLON, lexeme: ;, line number: 4]
[Lexeme type: SENTINEL_END, lexeme: }, line number: 5]

[Lexeme type: PROBABILITY_START, lexeme: scenarios:, line number: 7]
[Lexeme type: SENTINEL_START, lexeme: {, line number: 8]
    [Lexeme type: LINE_COMMENT, lexeme: //to many choices, line number: 9]
    [Lexeme type: ID, lexeme: Semantically Invalid Combinatoric, line number: 10][Lexeme type: ASSIGN, lexeme: =, line number: 10] [Lexeme type: SENTINEL_START, lexeme: {, line number: 10][Lexeme type: TREE_START, lexeme: scenario, line number: 10] [Lexeme type: ASSIGN, lexeme: =, line number: 10] [Lexeme type: SENTINEL_START, lexeme: {, line number: 10][Lexeme type: COMBINATORIC, lexeme: COMBINATORIC, line number: 10] [Lexeme type: SENTINEL_START, lexeme: {, line number: 10][Lexeme type: NON_NEGATIVE_INTEGER, lexeme: 10, line number: 10][Lexeme type: SEMI_COLON, lexeme: ;, line number: 10] [Lexeme type: CONDITION_HAND_CARD_START, lexeme: [, line number: 10][Lexeme type: ID, lexeme: thingy, line number: 10][Lexeme type: CONDITION_HAND_CARD_END, lexeme: ], line number: 10][Lexeme type: SEMI_COLON, lexeme: ;, line number: 10] [Lexeme type: CONDITION_HAND_CARD_START, lexeme: [, line number: 10][Lexeme type: ID, lexeme: thingy, line number: 10][Lexeme type: CONDITION_HAND_CARD_END, lexeme: ], line number: 10][Lexeme type: SEMI_COLON, lexeme: ;, line number: 10] [Lexeme type: CONDITION_HAND_CARD_START, lexeme: [, line number: 10][Lexeme type: ID, lexeme: thingy, line number: 10][Lexeme type: CONDITION_HAND_CARD_END, lexeme: ], line number: 10][Lexeme type: SEMI_COLON, lexeme: ;, line number: 10] [Lexeme type: CONDITION_HAND_CARD_START, lexeme: [, line number: 10][Lexeme type: ID, lexeme: thingy, line number: 10][Lexeme type: CONDITION_HAND_CARD_END, lexeme: ], line number: 10][Lexeme type: SEMI_COLON, lexeme: ;, line number: 10][Lexeme type: SENTINEL_END, lexeme: }, line number: 10][Lexeme type: SENTINEL_END, lexeme: }, line number: 10][Lexeme type: SEMI_COLON, lexeme: ;, line number: 10][Lexeme type: SENTINEL_END, lexeme: }, line number: 10]

    [Lexeme type: LINE_COMMENT, lexeme: //missing expressions, line number: 12]
    [Lexeme type: ID, lexeme: Semantically Invalid Combinatoric 2, line number: 13][Lexeme type: ASSIGN, lexeme: =, line number: 13] [Lexeme type: SENTINEL_START, lexeme: {, line number: 13][Lexeme type: TREE_START, lexeme: scenario, line number: 13] [Lexeme type: ASSIGN, lexeme: =, line number: 13] [Lexeme type: SENTINEL_START, lexeme: {, line number: 13][Lexeme type: COMBINATORIC, lexeme: COMBINATORIC, line number: 13] [Lexeme type: SENTINEL_START, lexeme: {, line number: 13][Lexeme type: NON_NEGATIVE_INTEGER, lexeme: 2, line number: 13][Lexeme type: SEMI_COLON, lexeme: ;, line number: 13] [Lexeme type: CONDITION_HAND_CARD_START, lexeme: [, line number: 13][Lexeme type: ID, lexeme: thingy, line number: 13][Lexeme type: CONDITION_HAND_CARD_END, lexeme: ], line number: 13][Lexeme type: SEMI_COLON, lexeme: ;, line number: 13] [Lexeme type: CONDITION_HAND_CARD_START, lexeme: [, line number: 13][Lexeme type: ID, lexeme: thingy, line number: 13][Lexeme type: CONDITION_HAND_CARD_END, lexeme: ], line number: 13][Lexeme type: SEMI_COLON, lexeme: ;, line number: 13] [Lexeme type: SEMI_COLON, lexeme: ;, line number: 13][Lexeme type: SEMI_COLON, lexeme: ;, line number: 13] [Lexeme type: SENTINEL_END, lexeme: }, line number: 13][Lexeme type: SENTINEL_END, lexeme: }, line number: 13][Lexeme type: SEMI_COLON, lexeme: ;, line number: 13][Lexeme type: SENTINEL_END, lexeme: }, line number: 13]
[Lexeme type: SENTINEL_END, lexeme: }, line number: 14]

